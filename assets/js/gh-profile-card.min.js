/** GitHub Profile Card - v2.0.1 **/
!function(){"use strict";var e=function(){function e(){}return e.get=function(t){return e.requestCache[t]},e.add=function(t,r){e.requestCache[t]=r,window.localStorage.setItem(e.cacheName,JSON.stringify(e.requestCache))},e.getCache=function(){return JSON.parse(window.localStorage.getItem(e.cacheName))},e}();e.cacheName="github-request-cache",e.requestCache=e.getCache()||{};var t=function(){function t(){this.apiBase="https://api.github.com"}return t.prototype.loadUserData=function(e,t){var r=this,n=this.apiGet(this.apiBase+"/users/"+e);n.success(function(e){r.apiGet(e.repos_url).success(function(r){t({profile:e,repositories:r},null)})}),n.error(function(e,n){var a=r.identifyError(e,n);t(null,a)})},t.prototype.loadRepositoriesLanguages=function(e,t){var r=this,n=this.extractLangURLs(e),a=[],o=n.length;n.forEach(function(e){var n=r.apiGet(e);n.error(function(e){return o--}),n.success(function(e){a.push(e),a.length===o&&t(a)})})},t.prototype.identifyError=function(e,t){var r={message:e.message};404===t.status&&(r.isWrongUser=!0);var n=t.getResponseHeader("X-RateLimit-Remaining");if(0===Number(n)){var a=t.getResponseHeader("X-RateLimit-Reset");r.resetDate=new Date(1e3*Number(a)),r.message=r.message.split("(")[0]}return r},t.prototype.extractLangURLs=function(e){return e.map(function(e){return e.languages_url})},t.prototype.apiGet=function(t){var r=this.buildRequest(t);return{success:function(n){r.addEventListener("load",function(){if(304===r.status&&n(e.get(t).data,r),200===r.status){var a=JSON.parse(r.responseText);e.add(t,{lastModified:r.getResponseHeader("Last-Modified"),data:a}),n(a,r)}})},error:function(e){r.addEventListener("load",function(){200!==r.status&&304!==r.status&&e(JSON.parse(r.responseText),r)})}}},t.prototype.buildRequest=function(e){var t=new XMLHttpRequest;return t.open("GET",e),this.buildApiHeaders(t,e),t.send(),t},t.prototype.buildApiHeaders=function(t,r){t.setRequestHeader("Accept","application/vnd.github.v3+json");var n=e.get(r);n&&t.setRequestHeader("If-Modified-Since",n.lastModified)},t}(),r=function(){function e(){}return e.clearChildren=function(e){for(;e.hasChildNodes();)e.removeChild(e.firstChild)},e.createError=function(e,t){var r=document.createElement("div");if(r.className="error",r.innerHTML="<span>"+e.message+"</span>",e.isWrongUser&&(r.innerHTML="<span>Not found user: "+t+"</span>"),e.resetDate){var n=e.resetDate.getMinutes()-(new Date).getMinutes();n=n<0?60+n:n,r.innerHTML+='<span class="remain">Come back after '+n+" minutes</span>"}return r},e.createProfile=function(e){function t(e,t){t.forEach(function(t){return e.appendChild(t)})}function r(e){var r=document.createElement("div");return r.classList.add("profile"),t(r,e),r}function n(e,t){var r=document.createElement("a");return r.href=e,r.className="name",r.appendChild(document.createTextNode(t)),r}function a(e){var t=document.createElement("img");return t.src=e,t.className="avatar",t}function o(e,t){var r=document.createElement("a");return r.href=t,r.className="follow-button",r.innerHTML="Follow",r}function s(e){var t=document.createElement("span");return t.className="followers",t.innerHTML=""+e,t}function i(e){var r=document.createElement("div");return r.className="followMe",t(r,e),r}var u=o(e.login,e.html_url),c=s(e.followers),p=i([u,c]),d=a(e.avatar_url),f=n(e.html_url,e.name);return r([d,f,p])},e.createTopLanguagesSection=function(){var e=document.createElement("ul");return e.className="languages",e},e.createTopLanguagesList=function(e){return Object.keys(e).map(function(t){return{name:t,stat:e[t]}}).sort(function(e,t){return t.stat-e.stat}).slice(0,3).map(function(e){return"<li>"+e.name+"</li>"}).reduce(function(e,t){return e+t})},e.createRepositoriesHeader=function(e){var t=document.createElement("span");return t.className="header",t.appendChild(document.createTextNode(""+e)),t},e.createRepositoriesList=function(e,t){var r=document.createElement("div");return r.className="repos",e.slice(0,t).map(this.createRepositoryElement).forEach(function(e){return r.appendChild(e)}),r},e.createRepositoryElement=function(e){var t=new Date(e.updated_at),r=document.createElement("a");return r.href=e.html_url,r.title=e.description,r.innerHTML='\n                <span class="repo-name"> '+e.name+' </span>\n                <span class="updated">Updated: '+t.toLocaleDateString()+' </span>\n                <span class="star"> '+e.stargazers_count+" </span>\n            ",r},e}(),n=function(){function e(e){void 0===e&&(e={}),this.apiLoader=new t,this.$template=this.findTemplate(e.template),this.extractHtmlConfig(e,this.$template),this.options=this.completeConfiguration(e)}return e.prototype.init=function(){var e=this;this.apiLoader.loadUserData(this.options.username,function(t,r){e.userData=t,e.render(e.options,r)})},e.prototype.refresh=function(e){this.options=this.completeConfiguration(e),this.render(this.options)},e.prototype.completeConfiguration=function(e){var t={username:null,template:"#github-card",sortBy:"stars",headerText:"Most starred repositories",maxRepos:5};for(var r in t)t[r]=e[r]||t[r];return t},e.prototype.findTemplate=function(e){void 0===e&&(e="#github-card");var t=document.querySelector(e);if(!t)throw"No template found for selector: "+e;return t.className="gh-profile-card",t},e.prototype.extractHtmlConfig=function(e,t){if(e.username=e.username||t.dataset.username,e.sortBy=e.sortBy||t.dataset.sortBy,e.headerText=e.headerText||t.dataset.headerText,e.maxRepos=e.maxRepos||parseInt(t.dataset.maxRepos,10),!e.username)throw"Not provided username"},e.prototype.render=function(e,t){var n=this.$template;if(r.clearChildren(n),t){var a=r.createError(t,e.username);return void n.appendChild(a)}var o=this.userData.repositories;this.sortRepositories(o,e.sortBy);var s=r.createProfile(this.userData.profile);if(s.appendChild(this.createTopLanguagesSection(o)),n.appendChild(s),e.maxRepos>0){var i=r.createRepositoriesHeader(e.headerText),u=r.createRepositoriesList(o,e.maxRepos);u.insertBefore(i,u.firstChild),n.appendChild(u)}},e.prototype.createTopLanguagesSection=function(e){var t=this,n=r.createTopLanguagesSection();return this.apiLoader.loadRepositoriesLanguages(e.slice(0,10),function(e){var a=t.groupLanguagesUsage(e);n.innerHTML=r.createTopLanguagesList(a)}),n},e.prototype.groupLanguagesUsage=function(e){var t={};return e.forEach(function(e){for(var r in e)t[r]=t[r]||0,t[r]+=e[r]}),t},e.prototype.sortRepositories=function(e,t){var r=this;e.sort(function(e,n){if("stars"===t){var a=n.stargazers_count-e.stargazers_count;if(0!==a)return a}return r.dateDifference(n.updated_at,e.updated_at)})},e.prototype.dateDifference=function(e,t){return new Date(e).getTime()-new Date(t).getTime()},e}();window.GitHubCard=n,document.addEventListener("DOMContentLoaded",function(){var e=document.querySelector("#github-card");if(e){var t=new n;t.init()}})}();
